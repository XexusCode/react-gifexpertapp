{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OAEI,0BAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAC7BR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAuBO,OACrCN,EAAc,OAMZ,2BACMO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAabM,GAba,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAKA,KCFJS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGd,UAGT,CAACtB,IAGIuB,EDnBwBM,CAAa7B,GAAhCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAIpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqClB,GAE9CsB,GAAW,uBAAGJ,UAAU,qCAAb,WAGhB,yBAAKA,UAAU,aAGRL,EAAOJ,KAAI,SAACC,GAAD,OACN,kBAAC,EAAD,eACAoB,IAAMpB,EAAIC,IACND,UESTqB,EA9Ba,WAAM,MAGM7C,mBAAS,CAAC,aAHhB,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAQ9B,OAEI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA8B,IAAM9B,EACNA,SAAUA,UClBlCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ddc1027a.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        \r\n        e.preventDefault(); \r\n        \r\n        if(inputValue.trim().length> 2){\r\n        setCategories((cat)=> [inputValue,...cat]) \r\n        setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}/> \r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=w5pE0PXJJ2WZ0rei7Y055hKrC77o6q1D`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url \r\n        }\r\n    })\r\n   return gifs\r\n   \r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}></img>\r\n            <h2>{title}</h2>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState,useEffect } from 'react'\r\n import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n  \r\n   \r\n    \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n            {loading && <p className=' animate__animated animate__flash'>Loading</p>  }\r\n\r\n        \r\n        <div className='card-grid'>\r\n            \r\n               {\r\n               images.map((img)=>( \r\n                    <GifGridItem \r\n                    key= {img.id}\r\n                    {...img} />\r\n                    ))\r\n                }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport  {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    }); \r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            }, 500);\r\n            \r\n        })\r\n    },[category])\r\n\r\n    \r\n    return state; // {data:[], loading : true }\r\n    \r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => { \r\n\r\n    // const categories = ['One Punch', 'Naruto', 'One Piece']\r\n    const [categories, setCategories] = useState(['willyrex'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'Hunter x Hunter']);\r\n    // }\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n        \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                        key={ category } \r\n                        category={category}/> \r\n                        ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}